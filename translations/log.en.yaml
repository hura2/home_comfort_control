en:
  time_related:
    current_time: "Current time: %{current_time}"
    forecast_max_temp: "Forecast max temperature: %{forecast_max_temperature}°"

  environment_data:
    co2_level: "CO2 level: %{co2_level}ppm"
    sensor_data: "%{label}:%{location}: Temperature %{temperature}°, Humidity %{humidity}%, Absolute humidity %{absolute_humidity}g/㎥"
    temp_diff: "Temperature difference with %{reference_label}:%{reference_location}: %{temp_diff}°"
    co2_sensor: "CO2: %{co2_level}ppm"

  icl_adjustment:
    high_cost: "ICL adjustment during high-cost time: %{start_time} - %{end_time}"
    low_cost: "ICL adjustment during low-cost time: %{start_time} - %{end_time}"

  pmv_calculation:
    surface_temperatures: "Surface temperatures: Wall %{wall}°, Ceiling %{ceiling}°, Floor %{floor}°, Mean radiant temperature: %{mrt}°"
    sensible_temp: "Sensible temperature: %{sensible_temperature}°"
    met_icl_values: "met: %{met}, icl: %{icl}"
    relative_air_speed: "Relative air speed: %{relative_air_speed}m/s"
    dynamic_clothing: "Dynamic clothing insulation: %{dynamic_clothing_insulation}"
    pmv_ppd: "pmv = %{pmv}, ppd = %{ppd}%%"

  aircon_related:
    elapsed_time: "Time elapsed since last aircon setting: %{hours} hours %{minutes} minutes"
    aircon_settings_change: "Changed from %{current_settings} to %{new_settings}"
    aircon_settings_init: "Changed to %{new_settings}"
    aircon_scores: |
      Average score from two weeks ago: %{week_before_last_score}
      Average score from last week: %{last_week_score}
      Average score from this week: %{this_week_score}
      Yesterday's score: %{yesterday_score}
      Today's predicted score: %{today_score}
    aircon_settings_success: "Successfully sent aircon settings: %{aircon_settings}"
    aircon_settings_failed: "Failed to send aircon settings. Error message: %{error_message}"
    aircon_settings_retry: "Attempting to resend using another method"
    min_runtime_not_reached: "Mode will continue as the minimum runtime has not been reached. Elapsed time: %{hours} hours %{minutes} minutes"
    min_elapsed_time_reached: "Minimum elapsed time has been reached, settings can be changed."
    same_mode: "Current mode and new mode are the same: %{current_mode}"
    different_mode: "Current mode and new mode are different: Current mode = %{current_mode}, New mode = %{new_mode}"
    cooling_to_cooling: "Current mode is cooling, and the new mode is also cooling"
    cooling_to_other: "Current mode is cooling, and the new mode is not cooling"
    heating_to_heating: "Current mode is heating, and the new mode is also heating"
    heating_to_other: "Current mode is heating, and the new mode is not heating"
    aircon_mode_continue_and_update: "Continuing current mode while updating settings"
    non_cooling_or_heating: "Current mode is neither cooling nor heating: %{current_mode}"
    indoor_temp_below_dewpoint: "Indoor temperature is below the dew point."
    indoor_temp_below_dewpoint_high_pmv: "Indoor temperature is below the dew point, but PMV is high (%{pmv})."
    room_temp_diff_high: "The temperature difference between the living room and other rooms is greater than %{temp_diff}°. Increasing air circulation to reduce the temperature difference."
    closest_forecast_after: "Closest forecast: %{forecast_time}, Weather: %{weather}, Cloudiness: %{cloud_percentage}%%"
    solar_utilization:
      heating_reduction: "Heating is reduced due to solar warming."

  humidity_related:
    absolute_humidity_threshold_exceeded: "Absolute humidity has exceeded the threshold (%{threshold})."

  outdoor_temperature_related:
    wait_for_natural_cooling: "Waiting for natural cooling as the outdoor temperature is high."
    wait_for_natural_heating: "Waiting for natural heating as the outdoor temperature is low."

  circulator_related:
    circulator_status: "Current circulator power: %{power}, Fan speed: %{fan_speed}"
    circulator_update_fan_speed: "Updated circulator fan speed to %{new_fan_speed}"
    circulator_settings_success: "Successfully sent circulator settings. Power: %{power}, Fan speed: %{fan_speed}"
    circulator_off_notify: "Circulator power is set to OFF"
    circulator_on_notify: "Circulator fan speed set to %{new_fan_speed}"

  exception_related:
    exception_occurred: "Exception occurred: %{exception}"